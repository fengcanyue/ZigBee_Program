###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         03/Oct/2015  19:29:30 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\SampleApp -                        #
#                          副本\Source\my_function.c                          #
#    Command line       =  -f "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Proj #
#                          ects\zstack\Samples\SampleApp -                    #
#                          副本\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cf #
#                          g" (-DCPU32MHZ -DROOT=__near_func                  #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f "C:\Texas         #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\..\..\Tools\CC #
#                          2530DB\f8wConfig.cfg" (-DZIGBEEPRO -DSECURE=0      #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\Source\my_function.c" -D   #
#                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC  #
#                          -D LCD_SUPPORTED=DEBUG -lC "C:\Texas               #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\RouterEB\List\"   #
#                          -lA "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\SampleApp -                   #
#                          副本\CC2530DB\RouterEB\List\" --diag_suppress      #
#                          Pe001,Pa010 -o "C:\Texas                           #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\RouterEB\Obj\"    #
#                          -e --no_cse --no_unroll --no_inline                #
#                          --no_code_motion --no_tbaa --debug --core=plain    #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Texas                  #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\" -I "C:\Texas    #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\Source\" -I    #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\SampleApp -                       #
#                          副本\CC2530DB\..\..\..\ZMain\TI2530DB\" -I         #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\SampleApp -                       #
#                          副本\CC2530DB\..\..\..\..\..\Components\hal\includ #
#                          e\" -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\ #
#                          Projects\zstack\Samples\SampleApp -                #
#                          副本\CC2530DB\..\..\..\..\..\Components\hal\target #
#                          \CC2530EB\" -I "C:\Texas                           #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\include\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\high_level\" -I "C:\Texas             #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\low_level\srf04\" -I "C:\Texas        #
#                          Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\SampleApp - 副本\CC2530DB\..\..\..\..\..\Co #
#                          mponents\mac\low_level\srf04\single_chip\" -I      #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\SampleApp -                       #
#                          副本\CC2530DB\..\..\..\..\..\Components\mt\" -I    #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\SampleApp -                       #
#                          副本\CC2530DB\..\..\..\..\..\Components\osal\inclu #
#                          de\" -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a #
#                          \Projects\zstack\Samples\SampleApp -               #
#                          副本\CC2530DB\..\..\..\..\..\Components\services\s #
#                          addr\" -I "C:\Texas Instruments\ZStack-CC2530-2.5. #
#                          1a\Projects\zstack\Samples\SampleApp -             #
#                          副本\CC2530DB\..\..\..\..\..\Components\services\s #
#                          data\" -I "C:\Texas Instruments\ZStack-CC2530-2.5. #
#                          1a\Projects\zstack\Samples\SampleApp -             #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\af\" #
#                           -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\SampleApp -                   #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\nwk\ #
#                          " -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Samples\SampleApp -                  #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\sapi #
#                          \" -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\P #
#                          rojects\zstack\Samples\SampleApp -                 #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\sec\ #
#                          " -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Samples\SampleApp -                  #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\sys\ #
#                          " -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Samples\SampleApp -                  #
#                          副本\CC2530DB\..\..\..\..\..\Components\stack\zdo\ #
#                          " -I "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Pr #
#                          ojects\zstack\Samples\SampleApp -                  #
#                          副本\CC2530DB\..\..\..\..\..\Components\zmac\" -I  #
#                          "C:\Texas Instruments\ZStack-CC2530-2.5.1a\Project #
#                          s\zstack\Samples\SampleApp -                       #
#                          副本\CC2530DB\..\..\..\..\..\Components\zmac\f8w\" #
#                           -On --require_prototypes                          #
#    List file          =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\SampleApp -                        #
#                          副本\CC2530DB\RouterEB\List\my_function.lst        #
#    Object file        =  C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\SampleApp -                        #
#                          副本\CC2530DB\RouterEB\Obj\my_function.r51         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Texas Instruments\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SampleApp - 副本\Source\my_function.c
      1          /*串口*/
      2          #include "MT_UART.h"
      3          #include "MT.h"
      4          #include "my_function.h"

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \   uint16 f
   \                     f:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \   uint8 conversion[3]
   \                     conversion:
   \   000000                DS 3
   \   000003                REQUIRE `?<Initializer for conversion>`
   \   000003                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \   uint8 State_data[3]
   \                     State_data:
   \   000000                DS 3
   \   000003                REQUIRE `?<Initializer for State_data>`
   \   000003                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \   uint8 Absence_times[3]
   \                     Absence_times:
   \   000000                DS 3
   \   000003                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \   uint8 IgnoreDevice[3]
   \                     IgnoreDevice:
   \   000000                DS 3
   \   000003                REQUIRE `?<Initializer for IgnoreDevice>`
   \   000003                REQUIRE __INIT_XDATA_I
      5          #include <stdlib.h>
      6          /**************************变量声明************************************/
      7          //extern uint8 Absence_times[3];//={0,0,0};
      8          //uint8 State_data[3]={'0','0','0'};//林山定义了一个状态数组，用于记录各个端点的在线状态，目前先假设有3个端点。
      9          /**************************函数声明************************************/
     10          //void Absence_check(uint8 x);//狗清定义的节点缺席检测函数,有x次签到不到就报警。
     11          //void BT2Z_transmit(uint8 *group);//狗清定义的蓝牙到zigbee信息搬运函数
     12          /**************************函数描述************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     13          void Absence_check(uint8 x)
   \                     Absence_check:
     14          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     15            uint8 i;
     16            //char string[3];
     17            for(i=0;i<3;i++)
   \   000007   7F00         MOV     R7,#0x0
   \                     ??Absence_check_0:
   \   000009   EF           MOV     A,R7
   \   00000A   C3           CLR     C
   \   00000B   9403         SUBB    A,#0x3
   \   00000D   4003         JC      $+5
   \   00000F   02....       LJMP    ??Absence_check_1 & 0xFFFF
     18            {
     19              if (State_data[i]=='0')
   \   000012   8F..         MOV     ?V0 + 0,R7
   \   000014   75..00       MOV     ?V0 + 1,#0x0
   \   000017   74..         MOV     A,#State_data & 0xff
   \   000019   25..         ADD     A,?V0 + 0
   \   00001B   F582         MOV     DPL,A
   \   00001D   74..         MOV     A,#(State_data >> 8) & 0xff
   \   00001F   35..         ADDC    A,?V0 + 1
   \   000021   F583         MOV     DPH,A
   \   000023   E0           MOVX    A,@DPTR
   \   000024   6430         XRL     A,#0x30
   \   000026   7015         JNZ     ??Absence_check_2
     20              {
     21                 Absence_times[i]++;
   \   000028   8F..         MOV     ?V0 + 0,R7
   \   00002A   75..00       MOV     ?V0 + 1,#0x0
   \   00002D   74..         MOV     A,#Absence_times & 0xff
   \   00002F   25..         ADD     A,?V0 + 0
   \   000031   F582         MOV     DPL,A
   \   000033   74..         MOV     A,#(Absence_times >> 8) & 0xff
   \   000035   35..         ADDC    A,?V0 + 1
   \   000037   F583         MOV     DPH,A
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   2401         ADD     A,#0x1
   \   00003C   F0           MOVX    @DPTR,A
     22              }
     23              if (State_data[i]=='1')
   \                     ??Absence_check_2:
   \   00003D   8F..         MOV     ?V0 + 0,R7
   \   00003F   75..00       MOV     ?V0 + 1,#0x0
   \   000042   74..         MOV     A,#State_data & 0xff
   \   000044   25..         ADD     A,?V0 + 0
   \   000046   F582         MOV     DPL,A
   \   000048   74..         MOV     A,#(State_data >> 8) & 0xff
   \   00004A   35..         ADDC    A,?V0 + 1
   \   00004C   F583         MOV     DPH,A
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   6431         XRL     A,#0x31
   \   000051   7028         JNZ     ??Absence_check_3
     24              {
     25                Absence_times[i]=0;
   \   000053   8F..         MOV     ?V0 + 0,R7
   \   000055   75..00       MOV     ?V0 + 1,#0x0
   \   000058   74..         MOV     A,#Absence_times & 0xff
   \   00005A   25..         ADD     A,?V0 + 0
   \   00005C   F582         MOV     DPL,A
   \   00005E   74..         MOV     A,#(Absence_times >> 8) & 0xff
   \   000060   35..         ADDC    A,?V0 + 1
   \   000062   F583         MOV     DPH,A
   \   000064   7400         MOV     A,#0x0
   \   000066   F0           MOVX    @DPTR,A
     26                State_data[i]='0';
   \   000067   8F..         MOV     ?V0 + 0,R7
   \   000069   75..00       MOV     ?V0 + 1,#0x0
   \   00006C   74..         MOV     A,#State_data & 0xff
   \   00006E   25..         ADD     A,?V0 + 0
   \   000070   F582         MOV     DPL,A
   \   000072   74..         MOV     A,#(State_data >> 8) & 0xff
   \   000074   35..         ADDC    A,?V0 + 1
   \   000076   F583         MOV     DPH,A
   \   000078   7430         MOV     A,#0x30
   \   00007A   F0           MOVX    @DPTR,A
     27              }
     28              if((Absence_times[i]>=x) && (IgnoreDevice[i]=='0'))
   \                     ??Absence_check_3:
   \   00007B   8F..         MOV     ?V0 + 0,R7
   \   00007D   75..00       MOV     ?V0 + 1,#0x0
   \   000080   74..         MOV     A,#Absence_times & 0xff
   \   000082   25..         ADD     A,?V0 + 0
   \   000084   F582         MOV     DPL,A
   \   000086   74..         MOV     A,#(Absence_times >> 8) & 0xff
   \   000088   35..         ADDC    A,?V0 + 1
   \   00008A   F583         MOV     DPH,A
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   C3           CLR     C
   \   00008E   9E           SUBB    A,R6
   \   00008F   4048         JC      ??Absence_check_4
   \   000091   8F..         MOV     ?V0 + 0,R7
   \   000093   75..00       MOV     ?V0 + 1,#0x0
   \   000096   74..         MOV     A,#IgnoreDevice & 0xff
   \   000098   25..         ADD     A,?V0 + 0
   \   00009A   F582         MOV     DPL,A
   \   00009C   74..         MOV     A,#(IgnoreDevice >> 8) & 0xff
   \   00009E   35..         ADDC    A,?V0 + 1
   \   0000A0   F583         MOV     DPH,A
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   6430         XRL     A,#0x30
   \   0000A5   7032         JNZ     ??Absence_check_4
     29              {
     30                //itoa(i,string,10);
     31                HalUARTWrite(0, "device ",7);
   \   0000A7                ; Setup parameters for call to function HalUARTWrite
   \   0000A7   7C07         MOV     R4,#0x7
   \   0000A9   7D00         MOV     R5,#0x0
   \   0000AB   7A..         MOV     R2,#`?<Constant "device ">` & 0xff
   \   0000AD   7B..         MOV     R3,#(`?<Constant "device ">` >> 8) & 0xff
   \   0000AF   7900         MOV     R1,#0x0
   \   0000B1   12....       LCALL   ??HalUARTWrite?relay
     32                HalUARTWrite(0,&conversion[i],1);
   \   0000B4                ; Setup parameters for call to function HalUARTWrite
   \   0000B4   7C01         MOV     R4,#0x1
   \   0000B6   7D00         MOV     R5,#0x0
   \   0000B8   8F..         MOV     ?V0 + 0,R7
   \   0000BA   75..00       MOV     ?V0 + 1,#0x0
   \   0000BD   74..         MOV     A,#conversion & 0xff
   \   0000BF   25..         ADD     A,?V0 + 0
   \   0000C1   FA           MOV     R2,A
   \   0000C2   74..         MOV     A,#(conversion >> 8) & 0xff
   \   0000C4   35..         ADDC    A,?V0 + 1
   \   0000C6   FB           MOV     R3,A
   \   0000C7   7900         MOV     R1,#0x0
   \   0000C9   12....       LCALL   ??HalUARTWrite?relay
     33                HalUARTWrite(0, " is offline\n",12);//warning!!
   \   0000CC                ; Setup parameters for call to function HalUARTWrite
   \   0000CC   7C0C         MOV     R4,#0xc
   \   0000CE   7D00         MOV     R5,#0x0
   \   0000D0   7A..         MOV     R2,#`?<Constant " is offline\\n">` & 0xff
   \   0000D2   7B..         MOV     R3,#(`?<Constant " is offline\\n">` >> 8) & 0xff
   \   0000D4   7900         MOV     R1,#0x0
   \   0000D6   12....       LCALL   ??HalUARTWrite?relay
     34              }
     35            }
   \                     ??Absence_check_4:
   \   0000D9   0F           INC     R7
   \   0000DA   02....       LJMP    ??Absence_check_0 & 0xFFFF
     36          }
   \                     ??Absence_check_1:
   \   0000DD   7F02         MOV     R7,#0x2
   \   0000DF   02....       LJMP    ?BANKED_LEAVE_XDATA
     37          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          void NeverDect(uint8 DeviceID)
   \                     NeverDect:
     39          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     40            IgnoreDevice[DeviceID]='1';
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   75..00       MOV     ?V0 + 1,#0x0
   \   00000A   74..         MOV     A,#IgnoreDevice & 0xff
   \   00000C   25..         ADD     A,?V0 + 0
   \   00000E   F582         MOV     DPL,A
   \   000010   74..         MOV     A,#(IgnoreDevice >> 8) & 0xff
   \   000012   35..         ADDC    A,?V0 + 1
   \   000014   F583         MOV     DPH,A
   \   000016   7431         MOV     A,#0x31
   \   000018   F0           MOVX    @DPTR,A
     41          }
   \   000019   7F02         MOV     R7,#0x2
   \   00001B   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     42          void SerialCMD(mtOSALSerialData_t *cmdMsg)
   \                     SerialCMD:
     43          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     44            switch(cmdMsg->msg[0])
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F8           MOV     R0,A
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F583         MOV     DPH,A
   \   000015   8882         MOV     DPL,R0
   \   000017   E0           MOVX    A,@DPTR
   \   000018   6430         XRL     A,#0x30
   \   00001A   7017         JNZ     ??SerialCMD_0
     45            {
     46              case IgnoreEvent:
     47                NeverDect((cmdMsg->msg[2])-80);//这个数组的下标应该改成int型。
   \   00001C                ; Setup parameters for call to function NeverDect
   \   00001C   8E82         MOV     DPL,R6
   \   00001E   8F83         MOV     DPH,R7
   \   000020   A3           INC     DPTR
   \   000021   A3           INC     DPTR
   \   000022   E0           MOVX    A,@DPTR
   \   000023   F8           MOV     R0,A
   \   000024   A3           INC     DPTR
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F583         MOV     DPH,A
   \   000028   8882         MOV     DPL,R0
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   24B0         ADD     A,#-0x50
   \   00002F   F9           MOV     R1,A
   \   000030   12....       LCALL   ??NeverDect?relay
     48                break;
     49            }
     50            
     51          }
   \                     ??SerialCMD_0:
   \   000033   7F01         MOV     R7,#0x1
   \   000035   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for conversion>`:
   \   000000   30           DB 48
   \   000001   31           DB 49
   \   000002   32           DB 50

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for State_data>`:
   \   000000   30           DB 48
   \   000001   30           DB 48
   \   000002   30           DB 48

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for IgnoreDevice>`:
   \   000000   30           DB 48
   \   000001   30           DB 48
   \   000002   30           DB 48

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Absence_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Absence_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??NeverDect?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    NeverDect

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SerialCMD?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SerialCMD

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "device ">`:
   \   000000   64657669     DB "device "
   \            63652000

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " is offline\\n">`:
   \   000000   20697320     DB " is offline\012"
   \            6F66666C
   \            696E650A
   \            00      

   Maximum stack usage in bytes:

     Function          ISTACK PSTACK XSTACK
     --------          ------ ------ ------
     Absence_check         0      0     10
       -> HalUARTWrite     0      0     20
       -> HalUARTWrite     0      0     20
       -> HalUARTWrite     0      0     20
     NeverDect             0      0     19
     SerialCMD             0      0      9
       -> NeverDect        0      0     18


   Segment part sizes:

     Function/Label                  Bytes
     --------------                  -----
     f                                  2
     conversion                         3
     State_data                         3
     Absence_times                      3
     IgnoreDevice                       3
     Absence_check                    226
     NeverDect                         30
     SerialCMD                         56
     ?<Initializer for conversion>      3
     ?<Initializer for State_data>      3
     ?<Initializer for IgnoreDevice>    3
     ??Absence_check?relay              6
     ??NeverDect?relay                  6
     ??SerialCMD?relay                  6
     ?<Constant "device ">              8
     ?<Constant " is offline\n">       13

 
 312 bytes in segment BANKED_CODE
  18 bytes in segment BANK_RELAYS
   9 bytes in segment XDATA_I
   9 bytes in segment XDATA_ID
  21 bytes in segment XDATA_ROM_C
   5 bytes in segment XDATA_Z
 
 339 bytes of CODE  memory
  21 bytes of CONST memory
  14 bytes of XDATA memory

Errors: none
Warnings: none
